-- MySQL Script generated by MySQL Workbench
-- Wed Jul 13 23:19:46 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema cinemaisDb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema cinemaisDb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `cinemaisDb` DEFAULT CHARACTER SET utf8 ;
USE `cinemaisDb` ;

-- -----------------------------------------------------
-- Table `cinemaisDb`.`cinema`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemaisDb`.`cinema` (
  `id` INT NOT NULL,
  `nomeCinema` VARCHAR(45) NOT NULL,
  `nomeShopping` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinemaisDb`.`sala`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemaisDb`.`sala` (
  `numero` INT NOT NULL,
  `capacidade` INT NOT NULL,
  `sala3d` TINYINT NOT NULL,
  `descricao` VARCHAR(45) NOT NULL,
  `cinemaId` INT NOT NULL,
  `salaId` INT NOT NULL,
  INDEX `cinema_idx` (`cinemaId` ASC) VISIBLE,
  PRIMARY KEY (`salaId`),
  CONSTRAINT `cinema`
    FOREIGN KEY (`cinemaId`)
    REFERENCES `cinemaisDb`.`cinema` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinemaisDb`.`filme`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemaisDb`.`filme` (
  `idfilme` INT NOT NULL,
  `titulo` VARCHAR(45) NOT NULL,
  `diretor` VARCHAR(45) NOT NULL,
  `atorPrincipal` VARCHAR(45) NOT NULL,
  `duracao` VARCHAR(45) NOT NULL,
  `faixaEtaria` INT NOT NULL,
  `categoria` VARCHAR(45) NOT NULL,
  `preco` FLOAT NULL,
  PRIMARY KEY (`idfilme`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinemaisDb`.`sessao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemaisDb`.`sessao` (
  `numero` INT NOT NULL,
  `horario` VARCHAR(40) NOT NULL,
  `filmeId` INT NOT NULL,
  `salaID` INT NOT NULL,
  `data` DATE NOT NULL,
  `cinemaId` INT NOT NULL,
  PRIMARY KEY (`numero`),
  INDEX `filme_idx` (`filmeId` ASC) VISIBLE,
  CONSTRAINT `filme`
    FOREIGN KEY (`filmeId`)
    REFERENCES `cinemaisDb`.`filme` (`idfilme`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinemaisDb`.`ingresso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemaisDb`.`ingresso` (
  `idingresso` INT NOT NULL AUTO_INCREMENT,
  `clienteEmail` VARCHAR(45) NOT NULL,
  `preco` FLOAT NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  `idSessao` INT NULL,
  PRIMARY KEY (`idingresso`),
  INDEX `sessao_idx` (`idSessao` ASC) VISIBLE,
  CONSTRAINT `sessao`
    FOREIGN KEY (`idSessao`)
    REFERENCES `cinemaisDb`.`sessao` (`numero`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinemaisDb`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinemaisDb`.`cliente` (
  `nome` VARCHAR(45) NOT NULL,
  `estudante` TINYINT NOT NULL,
  `ingressos` INT NULL,
  `idade` INT NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `senha` VARCHAR(45) NOT NULL,
  INDEX `ingresso_idx` (`ingressos` ASC) VISIBLE,
  PRIMARY KEY (`email`),
  CONSTRAINT `ingresso`
    FOREIGN KEY (`ingressos`)
    REFERENCES `cinemaisDb`.`ingresso` (`idingresso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
